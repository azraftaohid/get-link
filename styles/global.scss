@import "restart";

@mixin apply-fs-size($level) {
  width: map-get($map: $font-sizes, $key: $level);
  height: map-get($map: $font-sizes, $key: $level);
}

#nav-container,
#footer-container,
.page-content {
  @extend .px-4, .px-md-5;
}

#nav-container,
#footer-container {
  @extend .mw-xl;
}

.toast-container {
  z-index: $zindex-tooltip;
}

.standout {
  @extend .px-3, .py-4, .my-3, .rounded;
}

.stall {
  .progress {
    height: 0.2rem;
    --#{$prefix}progress-bar-transition: width .3s linear;
  }
}

.pre-break {
  white-space: pre-line;
}

.alive {
  @include border-radius();
  padding: $btn-close-padding-y $btn-close-padding-x;
  opacity: $btn-close-opacity;

  &:hover {
    opacity: $btn-close-hover-opacity;
  }

  &:focus {
    box-shadow: $btn-close-focus-shadow;
    opacity: $btn-close-focus-opacity;
  }

  &:disabled,
  &.disabled {
    pointer-events: none;
    user-select: none;
    opacity: $btn-close-disabled-opacity;
  }
}

.ic-alive {
  @extend .alive;
}

.material-icons-outlined {
  @extend .text-truncate;
  width: 24px;
  height: 24px;

  &.fs-1 {
    @include apply-fs-size(1);
  }

  &.fs-5 {
    @include apply-fs-size(5);
  }
}

.border-feedback {
  &:hover {
    @extend .border, .border-secondary;
  }
}

.tick-group {
  .tick-item {
    @extend .ms-3;
  }
}

.table-rounded {
  // Known issue: don't use border with transparency enabled. Table outer border will be applied outside of 
  // cell background color, hence, border on the inside will be different from the outside.

  // Known issue: caption not supported.

  @extend .mb-3, .border, .rounded, .overflow-hidden;

  .table {
    @extend .mb-0;

    border-color: inherit;

    :not(caption):nth-child(1) {
      tr:nth-child(1) {
        @extend .border-top-0;

        th, td {
          @extend .border-top-0;
        }
      }
    }

    :not(caption):last-child {
      tr:last-child {
        @extend .border-bottom-0;

        th, td {
          @extend .border-bottom-0;
        }
      }
    }

    tr {
      th:nth-child(1), td:nth-child(1) {
        @extend .border-start-0;
      }

      th:last-child, td:last-child {
        @extend .border-end-0;
      }
    }
  }
}

blockquote {
  @extend .blockquote;
}

ul,
ol {
  @extend .my-3;
}

.eight-em {
  width: 8em;
}

[data-display-theme="dark"] {
  display: none;
}

@include color-mode(dark) {
  [data-display-theme="light"] {
    display: none;
  }

  [data-display-theme="dark"] {
    display: unset;
  }

  #root {
    background-color: $black;
  }

  #nav {
    background-color: $dark;
  }

  .nav {
    --#{$prefix}nav-link-color: #{$nav-link-color-dark};
    --#{$prefix}nav-link-hover-color: #{$nav-link-hover-color-dark};
  }

  .nav-pills {
    --#{$prefix}nav-pills-link-active-bg: #{$nav-pills-link-active-bg-dark};
  }

  .file-preview {
    background-color: $dark;
  }

  .btn-outline-vivid {
    @include button-outline-variant($light);
  }

  .border-vivid {
    border-color: $light;
  }

  .standout {
    background-color: $gray-900;
  }

  .border-feedback {
    &:active {
      border: var(--#{$prefix}border-width) var(--#{$prefix}border-style) var(--#{$prefix}light);
    }
  }
}

@include color-mode(light) {
  #nav {
    background-color: $light;
  }

  .file-preview {
    background-color: $light;
  }

  .btn-outline-vivid {
    @include button-outline-variant($dark);
  }

  .border-vivid {
    border-color: $dark;
  }

  .standout {
    background-color: $gray-100;
  }

  .border-feedback {
    &:active {
      border: var(--#{$prefix}border-width) var(--#{$prefix}border-style) var(--#{$prefix}dark);
    }
  }
}
